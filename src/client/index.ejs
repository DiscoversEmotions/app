<!DOCTYPE html>
<html>

  <head>
    <meta charset="utf-8">
    <title><%= htmlWebpackPlugin.options.title %></title>
    <link href="https://fonts.googleapis.com/css?family=Anonymous+Pro" rel="stylesheet">
    <style>
      html, body {
        height: 100%;
        overflow: hidden;
        background: black;
        color: white;
        margin: 0;
        padding: 0;
      }
      #app-canvas {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
      }
      #app-ui {
        position: absolute;
      }
      #basic-boot {
        position: fixed;
        padding: 0;
        bottom: 20px;
        right: 40px;
        height: 156px;
        width: 400px;
        overflow: hidden;
      }
      #basic-boot div {
        height: 26px;
        font-size: 16px;
        display: block;
        font-family: 'Anonymous Pro', monospace;
        text-align: right;
        padding: 0;
        margin: 0;
      }
      #basic-boot-logo {
        position: fixed;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
        width: 100%;
      }
    </style>
  </head>

  <body>
    <div id="app-canvas"></div>
    <div id="app-ui">
      <svg version="1.1" id="basic-boot-logo" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 1920 1028" style="enable-background:new 0 0 1920 1028;" xml:space="preserve">
          <style type="text/css">
              .st0 {
                  fill: #FFFFFF;
              }
          </style>
          <title>Plan de travail 1</title>
          <path class="st0" d="M562.6,533.3h-71.2v58.2h82.7v17.7H469.8V445H573v17.7h-81.5v52.9h71.2V533.3z"/>
          <path class="st0" d="M652.2,445l53.7,134l53.7-134h28.1v164.2H766v-64l2-69l-53.9,133h-16.6l-53.8-132.6l2.1,68.7v64h-21.7V445
      	H652.2z"/>
          <path class="st0" d="M941.8,533.3h-71.2v58.2h82.7v17.7H849V445h103.2v17.7h-81.5v52.9h71.2V533.3z"/>
          <path class="st0" d="M1031.3,445l53.7,134l53.7-134h28.1v164.2h-21.7v-64l2-69l-53.9,133h-16.6l-53.8-132.6l2.1,68.7v64h-21.7V445
      	H1031.3z"/>
          <path
              class="st0"
              d="M1228.1,609.2V445h53.7c17.8,0,31.2,3.7,40.2,11.1c9,7.4,13.5,18.3,13.5,32.7c0,7.7-2.2,14.5-6.5,20.4
      	c-4.4,5.9-10.3,10.5-17.8,13.7c8.9,2.5,15.9,7.2,21,14.2c5.2,7,7.7,15.2,7.7,24.9c0,14.7-4.8,26.3-14.3,34.7
      	c-9.6,8.4-23,12.6-40.5,12.6H1228.1z M1249.8,515.1h32.7c9.5,0,17-2.4,22.7-7.1c5.7-4.7,8.5-11.2,8.5-19.3c0-9-2.6-15.6-7.9-19.7
      	s-13.3-6.2-24-6.2h-32V515.1z M1249.8,532.4v59.1h35.8c10.1,0,18-2.6,23.9-7.8c5.8-5.2,8.7-12.4,8.7-21.6
      	c0-19.8-10.8-29.7-32.3-29.7H1249.8z"/>
          <path class="st0" d="M1487.9,533.3h-71.2v58.2h82.7v17.7H1395V445h103.2v17.7h-81.5v52.9h71.2V533.3z"/>
          <path
              class="st0"
              d="M1587.9,538.2c-9.9-3.8-17.5-9.4-23.1-17c-5.5-7.6-8.3-16.5-8.3-26.7c0-16.1,5-28.3,14.9-36.8
      	c10-8.4,24.2-12.6,42.7-12.6h54.4v17.7h-21.8h-10.9h-22.2c-11.4,0.1-20.2,2.8-26.2,8.2c-6.1,5.4-9.1,13.2-9.1,23.4
      	c0,9.3,3.2,16.8,9.5,22.4c6.4,5.6,14.9,8.4,25.7,8.4h22.4h10.9h21.8v84.1h-21.8v-66.4h-38.6l-35.6,66.4h-23.2v-1.4L1587.9,538.2z"/>
          <path
              class="st0"
              d="M385,538.2c9.9-3.8,17.5-9.4,23.1-17c5.5-7.6,8.3-16.5,8.3-26.7c0-16.1-5-28.3-14.9-36.8
      	c-10-8.4-24.2-12.6-42.7-12.6h-54.4v17.7h21.8h6.9h26.3c11.4,0.1,20.2,2.8,26.2,8.2c6.1,5.4,9.1,13.2,9.1,23.4
      	c0,9.3-3.2,16.8-9.5,22.4c-6.4,5.6-14.9,8.4-25.7,8.4H333h-6.9h-21.8v84.1h21.8v-66.4h38.6l35.6,66.4h23.2v-1.4L385,538.2z"/>
      </svg>
    </div>
    <div id="basic-boot">
      <div></div>
      <div></div>
      <div></div>
      <div></div>
      <div></div>
      <div></div>
      <div></div>
      <div></div>
    </div>
    <script type="text/javascript">
      var numberOfMessages = 6;
      var HAS_PERFORMANCE_NOW = (typeof performance !== 'undefined' && performance.now);
      var currentTime = HAS_PERFORMANCE_NOW ? () => performance.now() : () => new Date().getTime();
      var BOOT_TIMER = null;
      var BASIC_BOOT_STOPED = false;

      var container = document.getElementById('basic-boot');
      // Get messagesElems
      var messagesElems = [].map.call(container.childNodes, function(element) { return element; })
      messagesElems = messagesElems.filter(function  (item) {
        return item.tagName === 'DIV';
      });

      window.__START_TIME = currentTime();
      window.__MESSAGES = [
        { key: 'boot' }
      ];
      window.__STOP_BASIC_BOOT = function  () {
        BASIC_BOOT_STOPED = true;
        clearTimeout(window.BOOT_TIMER);
        if (container) {
          container.parentElement.removeChild(container);
        }
      }

      function addMessage (msg) {
        window.__MESSAGES.push(msg);
        if (window.__MESSAGES.length > numberOfMessages) {
          window.__MESSAGES = window.__MESSAGES.slice(-numberOfMessages);
        }
      }

      function renderMessage (msg) {
        if (msg === undefined) {
          return '';
        }
        if (msg.key === `boot`) {
          return `Start Booting System`;
        }
        if (msg.key === `boot-progress`) {
          return 'Booting System... ' + Math.floor(msg.progress) + ' / 100';
        }
      }

      function render () {
        var messagesToDisplay = window.__MESSAGES.slice().reverse();
        for (var i = 0; i < numberOfMessages; i++) {
          var msg = messagesToDisplay[i];
          messagesElems[(numberOfMessages - 1) - i].innerHTML = renderMessage(msg);
        }
      }

      function update () {
        render();
        if (BASIC_BOOT_STOPED) {
          return;
        }
        // Add message
        var lastMessage = window.__MESSAGES[window.__MESSAGES.length - 1];
        if (lastMessage.key === `boot`) {
          addMessage({ key: 'boot-progress', progress: 0 });
        } else {
          var nextProgress = lastMessage.progress + 1;
          if (nextProgress > 99) {
            nextProgress = 99;
          }
          var time = 100;
          if (nextProgress > 80) {
            time = 100 + Math.pow(1.15, nextProgress - 40);
          }
          window.__MESSAGES[window.__MESSAGES.length - 1].progress = nextProgress;
          if (nextProgress === 99) {
            return; // stop loop
          }
        }

        BOOT_TIMER = setTimeout(update, time);
      }

      update();
    </script>
  </body>

</html>
